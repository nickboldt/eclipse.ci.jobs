<?xml version="1.0" encoding="UTF-8"?>
<project>
  <actions/>
  <description>Move old builds from /home/data/httpd/download.eclipse.org to /home/data/httpd/archive.eclipse.org</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>2</daysToKeep>
        <numToKeep>2</numToKeep>
        <artifactDaysToKeep>2</artifactDaysToKeep>
        <artifactNumToKeep>2</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.28"/>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.29">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>dirsToArchive</name>
          <description>space separated list of folders to archive, if found. Bash wildcards supported, eg., R0*/* C*/* T*/* R3.1.*/* R3.2*/*

To archive nothing, use a pattern that won't match, like I_AM_NOT_A_FILE</description>
          <defaultValue>R3.10.0/I-3*</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>doArchive</name>
          <description>Check to actually perform archive, when you're SURE you're not going to break stuff.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>jdk1.8.0-latest</jdk>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># from /home/data/httpd/download.eclipse.org to /home/data/httpd/archive.eclipse.org

downloadDir=/home/data/httpd/download.eclipse.org/webtools/downloads/drops
archivesDir=/home/data/httpd/archive.eclipse.org/webtools/downloads/drops

function sizeReport () 
{
  baseDir="$3"
  
  echo "=========================="
  echo "Disk Usage ${1} Cleanup:"

  if [[ $2 == "nocount" ]]; then 
    du -sh ${baseDir} | egrep -v "(8.0K|4.0K|0)[[:space:]]" &gt; du.list.txt
  else
    du -shc ${baseDir} | egrep -v "(8.0K|4.0K|0)[[:space:]]" &gt; du.list.txt
  fi

  cat du.list.txt | egrep "^([[:digit:]]{2})M[[:space:]]" | sort
  echo "=========================="
  cat du.list.txt | egrep "([[:digit:]]{3})M[[:space:]]" | sort
  echo "=========================="
  cat du.list.txt | egrep "G[[:space:]]" | sort
  echo "=========================="
}

if [[ ${doArchive} == "true" ]]; then 
  sizeReport "Before" "nocount" "${archivesDir}"
  sizeReport "Before" "nocount" "${downloadDir}"
fi

for d in ${dirsToArchive}; do 
  if [[ $(ls -d ${downloadDir}/${d} 2&gt;&amp;1) != *"No such file or directory" ]]; then
    dirsToArch="$(ls -d ${downloadDir}/${d})"
    echo "Archive $dirsToArch"
    if [[ ${doArchive} == "true" ]]; then 
      for dta in $dirsToArch; do # /home/data/httpd/download.eclipse.org/webtools/downloads/drops/R0.1/S-0.1-20080729000000
        dtaName=${dta##*/} # S-0.1-20080729000000
        archDir=${dta/${downloadDir}/${archivesDir}}; archDir=${archDir%/*} # /home/data/httpd/archive.eclipse.org/webtools/downloads/drops/R0.1
        if [[ ! -d ${archivesDir}/${dtaName}/ ]]; then 
          echo "[INFO] Move ${dta} to ${archDir}/${dtaName}"
          mkdir -p ${archDir} &amp;&amp; mv ${dta} ${archDir}/${dtaName}
        else
          echo "[WARNING] Cannot move ${dta} to ${archDir}/${dtaName}"
          # rsync -Pzrlta ${dta}/* ${archDir}/${dtaName}/
        fi
      done
    fi
  fi
done

wait

sizeReport "After" "includecount" "${downloadDir}"
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.descriptionsetter.DescriptionSetterPublisher plugin="description-setter@1.10">
      <regexp>(.+)total</regexp>
      <regexpForFailed/>
      <description>After: \1</description>
      <setForMatrix>false</setForMatrix>
    </hudson.plugins.descriptionsetter.DescriptionSetterPublisher>
  </publishers>
  <buildWrappers/>
</project>